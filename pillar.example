#
# minions
#
# Copyright (C) 2025   darix
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

{%- set api_port = 9000 %}
{%- set console_port = 9000 %}

minio:
  api_port:     {{ api_port }}
  console_port: {{ console_port }}
  environment:
    root_user:     "minio"
    root_password: {{ "somepass" | gopass }}
    options:       "--console-address=0.0.0.0:{{ console_port }} --address=0.0.0.0:{{ api_port }}"
    volumes:       "https://minio{1..3}.example.com:{{ api_port }}/var/lib/minio/clustered/{1..4}"

  config:
    callhome:
      enable: 'off'
      frequency: 24h
    drive:
      max_timeout: 30s
    site:
      name: homies
      region: '{{ location }}'
    api:
      requests_max: 0
      cluster_deadline: 10s
      cors_allow_origin: '*'
      remote_transport_deadline: 2h
      list_quorum: strict
      replication_priority: auto
      replication_max_workers: 500
      replication_max_lrg_workers: 10
      transition_workers: 100
      stale_uploads_cleanup_interval: 6h
      stale_uploads_expiry: 24h
      delete_cleanup_interval: 5m
      odirect: 'on'
      gzip_objects: 'off'
      root_access:  'on'
      sync_events: 'off'
    scanner:
      speed: default
      alert_excess_versions: 100
      alert_excess_folders: 50000
    batch:
      replication_workers_wait: 0ms
      keyrotation_workers_wait: 0ms
      expiration_workers_wait: 0ms
    browser:
      hsts_seconds: 86400
      hsts_include_subdomains: 'off'
      hsts_preload: 'off'
      referrer_policy: 'strict-origin-when-cross-origin'
    ilm:
      transition_workers: 100
      expiration_workers: 100

{%- set restic_hosts_for_buckets     = [ "fortress", "tron", "octane", "pdp11" ] %}
{%- set pgbackrest_hosts_for_buckets = [ "fortress", "boxie" ] %}

  policies:
    {%- for hostname in pgbackrest_hosts_for_buckets %}
    pgbackrest_{{ hostname }}_append_only:
      type:          pgbackrest-append-only
      bucket_name:   pgbackrest-{{ hostname }}
      bucket_subdir: local

    pgbackrest_{{ hostname }}_full_permissions:
      type:          pgbackrest-full-permissions
      bucket_name:   pgbackrest-{{ hostname }}
      bucket_subdir: local
    {%- endfor %}

    {%- for hostname in restic_hosts_for_buckets %}
    restic_{{ hostname }}_append_only:
      type:          restic-append-only
      bucket_name:   restic-{{ hostname }}

    restic_{{ hostname }}_full_permissions:
      type:          restic-full-permissions
      bucket_name:   restic-{{ hostname }}
    {%- endfor %}

  users:
    {%- for hostname in pgbackrest_hosts_for_buckets %}

    {%- set username_append_only      = "pgbackrest_" ~ hostname ~ "_append_only" %}
    {%- set username_full_permissions = "pgbackrest_" ~ hostname ~ "_full_permissions" %}

    {{ username_append_only }}:
      policies:
        - pgbackrest_{{ hostname }}_append_only
      password: {{ "minio/" ~ username_append_only ~ "/password" | gopass }}
      service_accounts:
        {{ username_append_only }}:
          access_key: {{ "minio/" ~ username_append_only ~ "/access_key" | gopass }}
          secret_key: {{ "minio/" ~ username_append_only ~ "/secret_key" | gopass }}

    {{ username_full_permissions }}:
      policies:
        - pgbackrest_{{ hostname }}_full_permissions
      password: {{ "minio/" ~ username_full_permissions ~ "/password" | gopass }}
      service_accounts:
        {{ username_append_only }}:
          access_key: {{ "minio/" ~ username_full_permissions ~ "/access_key" | gopass }}
          secret_key: {{ "minio/" ~ username_full_permissions ~ "/secret_key" | gopass }}
    {%- endfor %}

    {%- for hostname in restic_hosts_for_buckets %}

    {%- set username_append_only      = "restic_" ~ hostname ~ "_append_only" %}
    {%- set username_full_permissions = "restic_" ~ hostname ~ "_full_permissions" %}

    { username_append_only }}:
      policies:
        - restic_{{ hostname }}_append_only
      password: {{ "minio/" ~ username_append_only ~ "/password" | gopass }}
      service_accounts:
        {{ username_append_only }}:
          access_key: {{ "minio/" ~ username_append_only ~ "/access_key" | gopass }}
          secret_key: {{ "minio/" ~ username_append_only ~ "/secret_key" | gopass }}

    {{ username_full_permissions }}:
      policies:
        - restic_{{ hostname }}_full_permissions
      password: {{ "minio/" ~ username_full_permissions ~ "/password" | gopass }}
      service_accounts:
        {{ username_append_only }}:
          access_key: {{ "minio/" ~ username_full_permissions ~ "/access_key" | gopass }}
          secret_key: {{ "minio/" ~ username_full_permissions ~ "/secret_key" | gopass }}
    {%- endfor %}

  buckets:
    {%- for hostname in pgbackrest_hosts_for_buckets %}
    pgbackrest-{{ hostname }}:
      settings:
        - versioning: false
        - locking: false
        - quota: false
    {%- endfor %}

    {%- for hostname in restic_hosts_for_buckets %}
    restic-{{ hostname}}: {}
    {%- endfor %}

